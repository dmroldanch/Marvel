// Generated by Dagger (https://dagger.dev).
package com.aptivist.challengeapis.core.di;

import com.aptivist.marvel.data.remote.IApiMarvel;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import retrofit2.Retrofit;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkModule_ProvidesApiMarvelFactory implements Factory<IApiMarvel> {
  private final Provider<Retrofit> retrofitProvider;

  public NetworkModule_ProvidesApiMarvelFactory(Provider<Retrofit> retrofitProvider) {
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public IApiMarvel get() {
    return providesApiMarvel(retrofitProvider.get());
  }

  public static NetworkModule_ProvidesApiMarvelFactory create(Provider<Retrofit> retrofitProvider) {
    return new NetworkModule_ProvidesApiMarvelFactory(retrofitProvider);
  }

  public static IApiMarvel providesApiMarvel(Retrofit retrofit) {
    return Preconditions.checkNotNullFromProvides(NetworkModule.INSTANCE.providesApiMarvel(retrofit));
  }
}
